#!/usr/bin/env bash

set -euo pipefail

IGGB_VERSION=0.4.1

lib_dir=$(cd $(dirname $0)/../lib && pwd)
source "${lib_dir}/install-github-go-binary.shrc"

help() {
  pod2text $0
  exit 1
}

version() {
  echo $IGGB_VERSION
  exit 0
}

extract_archive() {
  archive=$1
  case "$archive" in
    *\.tgz | *\.tar.gz )
      tar xvzf $archive
      ;;
    *\.gz )
      gzip $archive
      ;;
    *\.tbz2 | *\.tar.bz2 )
      tar xvjf $archive
      ;;
    *\.bz2 )
      bunzip2 $archive
      ;;
    *\.zip )
      unzip $archive
      ;;
    * )
      echo "[ERROR] Unknown archive format! $archive" >&2
      exit 1
      ;;
  esac
}

case "${1:-}" in
  "" | "-h" | "--help" )
    help
    ;;
  "-v" | "--version" )
    version
    ;;
  * )
    ;;
esac

CONF_DIR=${IGGB_CONF_DIR:-config}
BIN=$1
if [[ -d $CONF_DIR && -r $CONF_DIR/$BIN.conf ]]; then
  . $CONF_DIR/$BIN.conf
fi

VERSION=${VERSION:-$2}
OWNER=${OWNER:-$BIN}
REPO=${REPO:-$BIN}
OS=${OS:-}
ARCH=${ARCH:-}
EXT=${EXT:-tar.gz}
RAW=${RAW:-}
BIN_PATH=${BIN_PATH:-$BIN}
INSTALL_PATH=${INSTALL_PATH:-/usr/local/bin/}

if which $BIN &>/dev/null; then
  if $BIN --version 2>&1 | grep $VERSION &>/dev/null; then
    echo "[OK] $BIN v${VERSION} already installed."
    exit 0
  fi
fi

if [[ -z $OS ]]; then
  case "$(uname)" in
    "Darwin" )
      OS="darwin"
      ;;
    *Linux )
      OS="linux"
      ;;
    * )
      echo "[ERROR] Not supported platform! $(uname)" >&2
      exit 1
  esac
fi

if [[ -z $ARCH ]]; then
  case "$(uname -m)" in
    "x86_64" )
      ARCH="amd64"
      ;;
    i[3-6]86 )
      ARCH=386
      ;;
    * )
      echo "[ERROR] Unknow hardware type! $(uname -m)" >&2
      exit 1
  esac
fi

cd tmp

if [[ $RAW ]]; then
  FORMAT=${FORMAT:-'${BIN}-${OS}-${ARCH}-v${VERSION}'}
  package="$(eval echo $FORMAT)"
  wget "https://github.com/$OWNER/$REPO/releases/download/v${VERSION}/${package}" -O $BIN
  chmod +x $BIN
  mv $BIN $INSTALL_PATH
else
  FORMAT=${FORMAT:-'${BIN}-${OS}-${ARCH}-v${VERSION}.${EXT}'}
  archive="$(eval echo $FORMAT)"
  package=${archive%.${EXT}}

  wget "https://github.com/$OWNER/$REPO/releases/download/v${VERSION}/${archive}"
  extract_archive $archive
  cp $package/$BIN_PATH $INSTALL_PATH
fi

rm -rf ./${package}*

exit

: <<'__EOF__'

=encoding utf8

=head1 NAME

B<install-github-go-binary> - Install Go binary program hosted on GitHub

=head1 SYNOPSYS

    # Install program
    [OPTIONS] install-github-go-binary <program> <version>
    install-github-go-binary hub 2.2.3
    install-github-go-binary peco 0.3.6
    install-github-go-binary lltsv 0.4.1
    install-github-go-binary ghg 0.0.1

    # Help
    install-github-go-binary [-h|--help]

    # Version
    install-github-go-binary -v|--version

=head1 DESCRIPTION

Installs binary programs from GitHub.

Especially programs written in Golang.

=head1 AUTHORS

IKEDA Kiyoshi E<lt>yasutake.kiyoshi@gmail.comE<gt>

=head1 LICENSE

The MIT License (MIT)

Copyright (c) 2016 IKEDA Kiyoshi

=cut

__EOF__

